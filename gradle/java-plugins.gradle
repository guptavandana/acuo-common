apply plugin:'java'
apply plugin:'groovy'
apply plugin:'eclipse'
apply plugin:'idea'
apply plugin:'project-report'
apply plugin:'maven-publish'

compileJava {
	options.compilerArgs << '-parameters'
    //options.compilerArgs << '-Xlint:unchecked'
}

compileTestJava {
	options.compilerArgs << '-parameters'
	//options.compilerArgs << '-Xlint:unchecked'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

task('sourcesJar', type: Jar, dependsOn: classes) {
		classifier = 'sources'
		sourceSets.each { SourceSet ss ->
			from ss.allSource
		}
}

task('javadocJar', type: Jar, dependsOn: javadoc) {
		classifier = 'javadoc'
		from javadoc.destinationDir
}

artifacts {
		archives sourcesJar, javadocJar
}

publishing {
		publications {
				mavenJava(MavenPublication) {
						if (plugins.hasPlugin('war')) {
								from components.web
						} else {
								from components.java
						}

						artifact sourcesJar {
								classifier "sources"
						}

						artifact javadocJar {
								classifier "javadoc"
						}
						
						artifact testJar {
								classifier "tests"
						}
				}
		}
}

tasks.javadoc {
	options.links(
		"http://docs.oracle.com/javase/8/docs/api/",
		"https://google.github.io/guice/api-docs/latest/javadoc/"
	)
	options.linkSource true
}

tasks.create( [
  name: 'testJar',
  type: Jar,
  group: 'build',
  description: 'Assembles a jar archive containing the test classes.',
  dependsOn: tasks.testClasses
] ) {
  manifest = tasks.jar.manifest
  classifier = 'tests'
  from sourceSets.test.output
}

// for test dependencies between modules
// usage: testCompile project(path: ':module', configuration: 'tests')
configurations {
	testFixturesRuntime.extendsFrom testRuntime
	testFixturesCompile.extendsFrom testCompile
}

plugins.withType(org.gradle.plugins.ide.idea.IdeaPlugin) {
	idea {
		module {
			scopes.PROVIDED.plus.add(configurations.testFixturesCompile)
			scopes.PROVIDED.plus.add(configurations.testFixturesRuntime)
		}
	}
}

artifacts {
	archives testJar
	testFixturesRuntime testJar
}

tasks.uploadArchives.dependsOn testJar